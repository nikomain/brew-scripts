name: Auto Tag and Update Formula

on:
  push:
    branches:
      - main

jobs:
  tag-and-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout full repo with tags
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get list of changed subfolders
        id: folders
        run: |
          changed_folders=$(git diff --name-only HEAD^ HEAD | awk -F/ '{print $1 "/" $2}' | grep -v '^/' | sort -u)
          echo "Changed folders: $changed_folders"
          echo "FOLDERS=$changed_folders" >> $GITHUB_ENV

      - name: Tag changed tools and update formulas
        env:
          GH_PAT: ${{ secrets.HOMEBREW_PAT_TOKEN }}
          USERNAME: ${{ secrets.GH_USERNAME }}
          EMAIL: ${{ secrets.GH_EMAIL }}
        run: |
          set -euo pipefail

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          for folder_path in $FOLDERS; do
            if [ -d "$folder_path" ]; then
              tool=$(basename "$folder_path")
              echo "Processing tool: $tool"

              latest_tag=$(git tag --list "$tool-v*" | sort -V | tail -n 1)

              if [[ "$latest_tag" =~ v([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
                major="${BASH_REMATCH[1]}"
                minor="${BASH_REMATCH[2]}"
                patch="${BASH_REMATCH[3]}"
                new_patch=$((patch + 1))
                new_version="v${major}.${minor}.${new_patch}"
              else
                new_version="v1.0.0"
              fi

              tag_name="${tool}-${new_version}"
              echo "Creating tag: $tag_name"
              git tag "$tag_name"

              git remote set-url origin https://x-access-token:$GH_PAT@github.com/${{ github.repository }}
              git push origin "$tag_name"

              # -----------------------------
              # Update Homebrew formula repo
              # -----------------------------
              echo "Updating formula for $tool to $new_version"

              # Clone the tap repo
              git clone https://x-access-token:$GH_PAT@github.com/nikomain/homebrew-tools.git
              cd homebrew-tools

              FORMULA_FILE="Formula/${tool}.rb"
              DOWNLOAD_URL="https://github.com/${{ github.repository }}/archive/refs/tags/${tag_name}.tar.gz"
              # Wait and retry logic to ensure the tag is available for download
              attempt=0
              max_attempts=5
              delay_seconds=5
              
              until curl --silent --fail -L "$DOWNLOAD_URL" -o tag.tar.gz; do
                attempt=$((attempt + 1))
                if [ "$attempt" -ge "$max_attempts" ]; then
                  echo "‚ùå Failed to fetch $DOWNLOAD_URL after $max_attempts attempts."
                  exit 1
                fi
                echo "üîÑ Attempt $attempt failed. Retrying in $delay_seconds seconds..."
                sleep $delay_seconds
              done
              
              SHA256=$(shasum -a 256 tag.tar.gz | cut -d ' ' -f 1)


              sed -i '' "s|url \".*\"|url \"$DOWNLOAD_URL\"|" $FORMULA_FILE
              sed -i '' "s|sha256 \".*\"|sha256 \"$SHA256\"|" $FORMULA_FILE
              sed -i '' "s|version \".*\"|version \"${new_version#v}\"|" $FORMULA_FILE

              git config user.name "$USERNAME"
              git config user.email "$EMAIL"
              git add "$FORMULA_FILE"
              git commit -m "Update $tool formula to ${new_version#v}"
              git push origin main

              cd ..
              rm -rf homebrew-tools
            else
              echo "Skipping $folder_path (not a directory)"
            fi
          done
