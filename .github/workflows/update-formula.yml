name: Update Homebrew Formula
on:
  workflow_run:
    workflows: ["Auto Tag on Merge"]  # Name of the tagging workflow
    types:
      - completed

jobs:
  update-formula:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout brew-scripts
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # So we can fetch tags later
      - name: Fetch latest tag info
        id: tag
        run: |
          git fetch --tags

          LATEST_TAG=$(git tag --sort=-creatordate | grep -E '^[a-z0-9_-]+-v[0-9]+\.[0-9]+\.[0-9]+$' | head -n1)

          echo "Latest tag: $LATEST_TAG"

          TOOL_NAME=$(echo "$LATEST_TAG" | cut -d'-' -f1)
          VERSION=$(echo "$LATEST_TAG" | cut -d'-' -f2 | sed 's/^v//')

          echo "full_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "tool_name=$TOOL_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Calculate SHA256
        id: sha
        run: |
          DOWNLOAD_URL="https://github.com/${{ github.repository }}/archive/refs/tags/${{ steps.tag.outputs.full_tag }}.tar.gz"
          curl -L $DOWNLOAD_URL | shasum -a 256 | cut -d ' ' -f 1 > sha.txt
          echo "sha256=$(cat sha.txt)" >> $GITHUB_OUTPUT
          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT

      - name: Checkout tap repository
        uses: actions/checkout@v3
        with:
          repository: nikomain/homebrew-tools
          token: ${{ secrets.HOMEBREW_PAT_TOKEN }}

      - name: Update or create formula
        run: |
          FORMULA_FILE="Formula/${{ steps.tag.outputs.tool_name }}.rb"
          TOOL_FOLDER="${{ steps.tag.outputs.tool_name }}"
          META_FILE="$TOOL_FOLDER/formula.meta"

          # Save GitHub output values to shell variables
          DOWNLOAD_URL="${{ steps.sha.outputs.download_url }}"
          SHA256="${{ steps.sha.outputs.sha256 }}"
          VERSION="${{ steps.tag.outputs.version }}"

          if [[ -f "$FORMULA_FILE" ]]; then
            echo "🔄 Updating existing formula: $FORMULA_FILE"
            sed -i "s|url \".*\"|url \"$DOWNLOAD_URL\"|" "$FORMULA_FILE"
            sed -i "s|sha256 \".*\"|sha256 \"$SHA256\"|" "$FORMULA_FILE"
            sed -i "s|version \".*\"|version \"$VERSION\"|" "$FORMULA_FILE"
          else
            echo "🆕 Creating new formula for $TOOL_FOLDER"

            if [[ ! -f "$META_FILE" ]]; then
              echo "❌ Metadata file not found: $META_FILE"
              exit 1
            fi

            NAME=$(grep '^name' "$META_FILE" | cut -d '=' -f2 | xargs)
            DESC=$(grep '^desc' "$META_FILE" | cut -d '=' -f2- | xargs)
            LICENSE=$(grep '^license' "$META_FILE" | cut -d '=' -f2 | xargs)
            HOMEPAGE=$(grep '^homepage' "$META_FILE" | cut -d '=' -f2 | xargs)
            INSTALL=$(grep '^install' "$META_FILE" | cut -d '=' -f2- | xargs)

            # Read multi-line caveats
            CAVEATS=$(awk '/^caveats = \|/,0' "$META_FILE" | tail -n +2)

            cat > "$FORMULA_FILE" <<EOF
      class ${NAME^} < Formula
        desc "$DESC"
        homepage "$HOMEPAGE"
        url "$DOWNLOAD_URL"
        sha256 "$SHA256"
        version "$VERSION"
        license "$LICENSE"

        def install
          $INSTALL
        end

        def caveats
          <<~EOS
      $CAVEATS
          EOS
        end
      end
      EOF
          fi

      - name: Commit and push
        run: |
          git config user.name "${{ secrets.GH_USERNAME }}"
          git config user.email "${{ secrets.GH_EMAIL }}"
          git add Formula/${{ steps.tag.outputs.tool_name }}.rb
          git commit -m "Update ${{ steps.tag.outputs.tool_name }} formula to ${{ steps.tag.outputs.version }}"
          git push
